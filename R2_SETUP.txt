═══════════════════════════════════════════════════════════════
📦 CLOUDFLARE R2 SETUP - Быстрая настройка
═══════════════════════════════════════════════════════════════

🎯 ЧТО ЭТО ДАЕТ:
- ✅ Быстрая загрузка медиа файлов (CDN)
- ✅ Нет проблем с 404 на медиа
- ✅ Неограниченное хранилище
- ✅ Бесплатная исходящая передача данных (egress)

═══════════════════════════════════════════════════════════════
🚀 ПОШАГОВАЯ НАСТРОЙКА
═══════════════════════════════════════════════════════════════

1. СОЗДАТЬ BUCKET В CLOUDFLARE R2:
   - Войдите в Cloudflare Dashboard
   - R2 → Create bucket
   - Имя: axmedova-media (или любое другое)
   - Location: Automatic
   - Создайте

2. ПОЛУЧИТЬ API КЛЮЧИ:
   - R2 → Manage R2 API Tokens
   - Create API Token
   - Разрешения: Object Read & Write
   - Скопируйте:
     * Access Key ID
     * Secret Access Key
   - Сохраните в безопасном месте!

3. ПОЛУЧИТЬ ENDPOINT URL:
   - Откройте созданный bucket
   - Settings → Endpoint URL
   - Скопируйте URL (например: https://1234567890.r2.cloudflarestorage.com)

4. НАСТРОИТЬ CORS ПОЛИТИКУ (ВАЖНО!):
   - Откройте ваш R2 bucket
   - Settings → CORS policy
   - Добавьте политику:
   
   [
     {
       "AllowedOrigins": ["*"],
       "AllowedMethods": ["GET", "HEAD"],
       "AllowedHeaders": ["*"],
       "ExposeHeaders": [],
       "MaxAgeSeconds": 3600
     }
   ]
   
   - Сохраните

5. НАСТРОИТЬ CUSTOM DOMAIN (опционально):
   - R2 bucket → Settings → Public access
   - Connect domain → введите ваш домен (например: cdn.axmedova.uz)
   - Настройте DNS в Cloudflare
   - Подождите активации

6. ОБНОВИТЬ .env НА СЕРВЕРЕ:

# Включить R2 хранилище
USE_R2_STORAGE=True

# R2 credentials
R2_ACCESS_KEY_ID=your-access-key-id-here
R2_SECRET_ACCESS_KEY=your-secret-access-key-here
R2_BUCKET_NAME=axmedova-media
R2_ENDPOINT_URL=https://your-account-id.r2.cloudflarestorage.com
R2_CUSTOM_DOMAIN=cdn.axmedova.uz
R2_REGION_NAME=auto

# Для статических файлов на R2 (опционально)
USE_R2_FOR_STATIC=False

7. УСТАНОВИТЬ ЗАВИСИМОСТИ:

pip install django-storages boto3

8. ЗАГРУЗИТЬ СТАТИКУ НА R2:

python manage.py collectstatic --noinput

Файлы загрузятся напрямую на R2!

9. ЗАГРУЗИТЬ СУЩЕСТВУЮЩИЕ МЕДИА ФАЙЛЫ НА R2 (если есть):

# Создайте папки в bucket:
- media/
- media/profile/
- media/books/
- media/blog/
и т.д.

# Загрузите файлы через Cloudflare Dashboard или AWS CLI

10. ПЕРЕЗАПУСТИТЬ ПРИЛОЖЕНИЕ:

touch .restart.txt

═══════════════════════════════════════════════════════════════
🔧 ПРОВЕРКА РАБОТЫ
═══════════════════════════════════════════════════════════════

1. Загрузите тестовый файл через админку
2. Проверьте, что он появился в R2 bucket
3. Откройте URL файла - должен работать

═══════════════════════════════════════════════════════════════
⚡ БЫСТРОЕ ТЕСТИРОВАНИЕ
═══════════════════════════════════════════════════════════════

# В Django shell на сервере:
python manage.py shell

>>> from django.core.files.storage import default_storage
>>> print(default_storage.__class__)
# Должно быть: S3Boto3Storage

>>> print(default_storage.bucket_name)
# Должно быть: axmedova-media

═══════════════════════════════════════════════════════════════
🔄 ВАРИАНТЫ ИСПОЛЬЗОВАНИЯ
═══════════════════════════════════════════════════════════════

ВАРИАНТ 1: Только медиа на R2, статика локально
USE_R2_STORAGE=True
USE_R2_FOR_STATIC=False

ВАРИАНТ 2: И медиа, и статика на R2
USE_R2_STORAGE=True
USE_R2_FOR_STATIC=True

ВАРИАНТ 3: Все локально (по умолчанию)
USE_R2_STORAGE=False

═══════════════════════════════════════════════════════════════
📋 ПРЕИМУЩЕСТВА CLOUDFLARE R2
═══════════════════════════════════════════════════════════════

✅ БЕСПЛАТНАЯ исходящая передача данных (vs AWS S3)
✅ Совместимость с S3 API
✅ Глобальная CDN сеть Cloudflare
✅ Быстрая загрузка из любой точки мира
✅ Простая настройка
✅ Низкие цены на хранение ($0.015/GB/месяц)

═══════════════════════════════════════════════════════════════
🎯 ИТОГО
═══════════════════════════════════════════════════════════════

После настройки R2:
- Все новые загрузки идут на R2
- Медиа файлы доступны из любой точки мира
- Нет проблем с 404 в cPanel
- CDN ускорение загрузки

Готово к использованию! 🎉

